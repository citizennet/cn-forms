"use strict";!function(){angular.module("cn.forms",["ui.router","cn.ui","cn.flex-form"])}(),function(){function e(){return{restrict:"E",templateUrl:"cn-forms/templates/cn-forms.html",transclude:!0,scope:{config:"=ffConfig",model:"=ffModel"},controller:n,controllerAs:"vm",bindToController:!0}}function n(e,n,a,o,r,c,s,t,i){function m(){}function f(n){if(b.activateOffscreen=!1,b.config.cols=3,b.config.formCtrl=b.cnForm,b.config.buttonContainerClass="page-action-btns",b.config.isDisabled=l,b.config.schema)try{b.compiled=!1,e.compile(b.config.schema,r.page),b.pageIndex=e.getPageIndex(),b.page=e.getPage(),b.compiled=!0,b.page.errors&&(b.page.errors=0,c(function(){a.$broadcast("schemaFormValidate")})),b.renderedPages=_.reduce(b.config.schema.forms,function(e,n,a){return _.set(e,a,_.eq(b.pageIndex,a))},{})}catch(o){s.error("There was an error with your form data:",o.message)}t.search().sandbox&&(b.schemaStr=angular.toJson(b.config.schema),b.sandbox=!0)}function l(e){return e.isDisabled?e.isDisabled(d):d(e)}function d(e){return b.saving||b.cnForm.$invalid||(!(e&&e.allowPristine)||!b.activateOffscreen)&&b.cnForm.$pristine}function g(){console.log("vm.activateOffscreen:",b.activateOffscreen),b.activateOffscreen=!0}function v(e,n){console.log("submit:"),b.loadOffscreen(),a.$broadcast("schemaFormValidate"),a.$emit("schemaFormValidate"),!e.$valid&&!b.config.allowInvalid||b.saving?_.each(b.config.schema.forms,function(e){b.validatePage(e,e===b.page)}):(b.saving=!0,n(b.model).then(function(e){console.log("submit:response:",e),b.config.formCtrl.$setPristine(),b.saving=!1},function(e){b.saving=!1}))}function u(e,n){a.$broadcast("schemaFormValidate"),b.page!==b.config.schema.forms[b.pageIndex]&&(b.page=b.config.schema.forms[b.pageIndex]),b.validatePage(b.page),r.page=e.key,o.go(o.current.name,r),b.page=e,b.pageIndex=n,b.renderedPages[n]=!0,a.$emit("flexForm.updatePage",e.key),a.$broadcast("flexForm.updatePage",e.key)}function p(e,n){var a=b.config.formCtrl[e.key];if(a){console.error("curForm.$error:",a.$error);var o=_.chain(a.$error).reduce(function(e,n){return e.concat(n)}).uniq("$name").reject({$name:""}).value();o&&o.length?e.errors=!n&&o.length:e.errors=0}}function h(){b.schemaStr&&(b.config.schema=angular.fromJson(b.schemaStr))}a.__tag=new m;var b=this;b.activate=f,b.loadOffscreen=g,b.submit=v,b.updatePage=u,b.validatePage=p,b.cleanupEvent="cn.forms.cleanup",b.formKey=r.page,b.schemaStr="",b.onSandboxSchema=h,a.$watch(function(){return!!b.config.schema},b.activate),a.$on("$destroy",function(){a.$broadcast(b.cleanupEvent),a.$emit(b.cleanupEvent),e.destroy()})}angular.module("cn.forms").directive("cnForm",e),n.$inject=["cnFormsService","$rootScope","$scope","$state","$stateParams","$timeout","$log","$location","$compile"]}(),function(){function e(e,n){function a(){}function o(a){var o=a.excludedPage?"{page:(?!"+a.excludedPage+")[^/]*}":":page",r=["debug","sandbox"].concat(a.queryParams||[]).join("&");e.state(a.name,{"abstract":!0,url:a.baseUrl+"?"+r,controller:a.controller,controllerAs:"vm",resolve:a.resolve,permissions:a.permissions,params:a.params,templateUrl:a.templateUrl,reloadOnSearch:!1}).state(a.name+".page",{url:"/"+o,permissions:a.permissions,template:"<ui-view/>"}),n.addStates(a)}var r={addStates:o,$get:a};return r}angular.module("cn.forms").provider("cnFormsRoutes",e),e.$inject=["$stateProvider","cnFlexFormRoutesProvider"]}(),function(){function e(){function e(e,a){c.schema=e,n(a)}function n(e){if(c.schema.forms)for(var n=0,a=c.schema.forms.length;n<a;n++){var o=c.schema.forms[n];if(e===o.key){c.form=o,c.formIndex=n;break}}else c.form=c.schema.form}function a(){return c.form}function o(){return c.formIndex}function r(){c.form=null,c.schema=null,c.formIndex=null}var c={compile:e,getPage:a,getPageIndex:o,update:n,destroy:r};return c}angular.module("cn.forms").factory("cnFormsService",e)}(),angular.module("cn.forms").run(["$templateCache",function(e){e.put("cn-forms/templates/cn-forms.html",'<form name="vm.cnForm">\n  <section class="cn-form-head cn-heading row vertical-parent">\n    <div class="container-fluid max-width">\n      <cn-flex-form-header ff-header-config="vm.config"\n                           ff-submit="vm.submit(vm.cnForm, handler)"\n                           ff-load-offscreen="vm.loadOffscreen()">\n      </cn-flex-form-header>\n    </div>\n  </section>\n  <div class="cn-form cn-form-cols-3"\n       cn-responsive-height\n       cn-responsive-break="sm">\n    <div class="cn-form-inner">\n\n      <div class="col-sm-2 cn-form-nav" ng-if="vm.config.schema.forms">\n        <div class="cn-form-nav-inner"\n             cn-parent-width\n             cn-responsive-height\n             cn-responsive-break="sm">\n          <ul class="nav nav-pills nav-stacked">\n            <li class="{{page.key === vm.page.key ? \'active\' : \'\'}}"\n                ng-repeat="page in vm.config.schema.forms">\n              <a ng-click="vm.updatePage(page, $index)">\n                {{page.title || page.key | titleCase}}\n                <span class="badge has-error" ng-show="page.errors">{{page.errors}}</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div class="cn-form-body col-sm-6">\n        <div class="{{$index !== vm.pageIndex ? \'offscreen\' : \'\'}}"\n             ng-if="vm.config.schema.forms"\n             ng-repeat="form in vm.config.schema.forms">\n          <cn-flex-form\n            ff-form-index="$index"\n            ff-form-name="form.key"\n            ff-config="vm.config"\n            ff-model="vm.model"\n            ff-delay-form="!vm.renderedPages[$index] && !vm.activateOffscreen"\n            ff-cleanup-event="vm.cleanupEvent">\n          </cn-flex-form>\n        </div>\n\n        <cn-flex-form\n          ng-if="!vm.config.schema.forms"\n          ff-form-index="$index"\n          ff-form-name="vm.formKey"\n          ff-config="vm.config"\n          ff-model="vm.model"\n          ff-cleanup-event="vm.cleanupEvent">\n        </cn-flex-form>\n\n        <!-- sandbox for debug mode -->\n        <fieldset ng-if="vm.sandbox">\n          <legend>Sandbox</legend>\n\n          <div class="form-group">\n            <label class="control-label" for="schema">Form Data</label>\n            <textarea id="schema"\n                      class="form-control"\n                      ng-model="vm.schemaStr"\n                      rows="14">\n            </textarea>\n          </div>\n          <div class="form-group">\n            <button class="btn btn-primary"\n                    ng-click="vm.onSandboxSchema()">Update Form\n            </button>\n          </div>\n        </fieldset>\n        <!-- end sandbox -->\n      </div>\n\n      <div class="cn-form-meta" ng-class="{\'col-sm-4\': vm.config.schema.forms, \'col-sm-6\': !vm.config.schema.forms}">\n        <div class="cn-form-meta-inner"\n             cn-parent-width\n             cn-responsive-height\n             cn-responsive-break="sm"\n             cn-set-max-height="true">\n          <div ng-bind-html="vm.config.schema.meta"/>\n          <div ng-transclude/>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ui-view></ui-view>\n')}]);
//# sourceMappingURL=all.min.js.map
