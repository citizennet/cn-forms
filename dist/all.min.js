"use strict";!function(){angular.module("cn.forms",["ui.router","cn.ui","cn.flex-form"])}(),function(){function n(){return{restrict:"E",templateUrl:"cn-forms/templates/cn-forms.html",transclude:!0,scope:{config:"=ffConfig",model:"=ffModel"},controller:e,controllerAs:"vm",bindToController:!0}}function e(n,e,a,o,r,c,s,i,t){function m(e){if(h.activateOffscreen=!1,h.config.cols=3,h.config.formCtrl=h.cnForm,h.config.buttonContainerClass="page-action-btns",h.config.isDisabled=f,h.config.schema)try{h.compiled=!1,n.compile(h.config.schema,r.page),h.pageIndex=n.getPageIndex(),h.page=n.getPage(),h.compiled=!0,h.page.errors&&(h.page.errors=0,c(function(){a.$broadcast("schemaFormValidate")}))}catch(o){s.error("There was an error with your form data:",o.message)}i.search().sandbox&&(h.schemaStr=angular.toJson(h.config.schema),h.sandbox=!0)}function f(n){return n.isDisabled?n.isDisabled(l):l(n)}function l(n){return h.saving||h.cnForm.$invalid||(!(n&&n.allowPristine)||!h.activateOffscreen)&&h.cnForm.$pristine}function d(){console.log("vm.activateOffscreen:",h.activateOffscreen),h.activateOffscreen=!0}function g(n,e){console.log("submit:"),h.loadOffscreen(),a.$broadcast("schemaFormValidate"),a.$emit("schemaFormValidate"),!n.$valid&&!h.config.allowInvalid||h.saving?_.each(h.config.schema.forms,function(n){h.validatePage(n,n===h.page)}):(h.saving=!0,e(h.model).then(function(n){console.log("submit:response:",n),h.config.formCtrl.$setPristine(),h.saving=!1},function(n){h.saving=!1}))}function v(n){a.$broadcast("schemaFormValidate"),h.validatePage(h.page),r.page=n,o.go(o.current.name,r),a.$emit("flexForm.updatePage",n),a.$broadcast("flexForm.updatePage",n)}function u(n,e){var a=h.config.formCtrl[n.key];if(a){console.log("curForm.$error:",a.$error);var o=_.chain(a.$error).reduce(function(n,e){return n.concat(e)}).uniq("$name").reject({$name:""}).value();o&&o.length?n.errors=!e&&o.length:n.errors=0}}function p(){h.schemaStr&&(h.config.schema=angular.fromJson(h.schemaStr))}var h=this;h.activate=m,h.loadOffscreen=d,h.submit=g,h.updatePage=v,h.validatePage=u,h.cleanupEvent="cn.forms.cleanup",h.formKey=r.page,h.schemaStr="",h.onSandboxSchema=p,a.$watch(function(){return!!h.config.schema},h.activate),a.$on("$destroy",function(){a.$emit(h.cleanupEvent)})}angular.module("cn.forms").directive("cnForm",n),e.$inject=["cnFormsService","$rootScope","$scope","$state","$stateParams","$timeout","$log","$location","$compile"]}(),function(){function n(n,e){function a(){}function o(a){var o=a.excludedPage?"{page:(?!"+a.excludedPage+")[^/]*}":":page",r=["debug","sandbox"].concat(a.queryParams||[]).join("&");n.state(a.name,{"abstract":!0,url:a.baseUrl+"?"+r,controller:a.controller,controllerAs:"vm",template:"<ui-view></ui-view>",resolve:a.resolve,permissions:a.permissions,params:a.params}).state(a.name+".page",{url:"/"+o,templateUrl:a.templateUrl,permissions:a.permissions}),e.addStates(a)}var r={addStates:o,$get:a};return r}angular.module("cn.forms").provider("cnFormsRoutes",n),n.$inject=["$stateProvider","cnFlexFormRoutesProvider"]}(),function(){function n(){function n(n,a){r.schema=n,e(a)}function e(n){if(r.schema.forms)for(var e=0,a=r.schema.forms.length;a>e;e++){var o=r.schema.forms[e];if(n===o.key){r.form=o,r.formIndex=e;break}}else r.form=r.schema.form}function a(){return r.form}function o(){return r.formIndex}var r={compile:n,getPage:a,getPageIndex:o,update:e};return r}angular.module("cn.forms").factory("cnFormsService",n)}(),angular.module("cn.forms").run(["$templateCache",function(n){n.put("cn-forms/templates/cn-forms.html",'<form name="vm.cnForm">\n  <section class="cn-form-head cn-heading row vertical-parent">\n    <div class="container-fluid max-width">\n      <cn-flex-form-header ff-header-config="vm.config"\n                           ff-submit="vm.submit(vm.cnForm, handler)"\n                           ff-load-offscreen="vm.loadOffscreen()">\n      </cn-flex-form-header>\n    </div>\n  </section>\n  <div class="cn-form cn-form-cols-3"\n       cn-responsive-height\n       cn-responsive-break="sm">\n    <div class="cn-form-inner">\n\n      <div class="col-sm-2 cn-form-nav" ng-if="vm.config.schema.forms">\n        <div class="cn-form-nav-inner"\n             cn-parent-width\n             cn-responsive-height\n             cn-responsive-break="sm">\n          <ul class="nav nav-pills nav-stacked">\n            <li class="{{page.key === vm.page.key ? \'active\' : \'\'}}"\n                ng-repeat="page in vm.config.schema.forms">\n              <a ng-click="vm.updatePage(page.key)">\n                <!-- i class="cni cni-{{page.key}}"></i -->\n                {{page.title || page.key | titleCase}}\n                <span class="badge has-error" ng-show="page.errors">{{page.errors}}</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div class="cn-form-body col-sm-6">\n        <div class="{{$index !== vm.pageIndex ? \'offscreen\' : \'\'}}"\n             ng-if="vm.config.schema.forms"\n             ng-repeat="form in vm.config.schema.forms">\n          <cn-flex-form\n            ff-form-index="$index"\n            ff-form-name="form.key"\n            ff-config="vm.config"\n            ff-model="vm.model"\n            ff-delay-form="$index !== vm.pageIndex && !vm.activateOffscreen"\n            ff-cleanup-event="vm.cleanupEvent">\n          </cn-flex-form>\n        </div>\n\n        <cn-flex-form\n          ng-if="!vm.config.schema.forms"\n          ff-form-index="$index"\n          ff-form-name="vm.formKey"\n          ff-config="vm.config"\n          ff-model="vm.model"\n          ff-cleanup-event="vm.cleanupEvent">\n        </cn-flex-form>\n\n        <!-- sandbox for debug mode -->\n        <fieldset ng-if="vm.sandbox">\n          <legend>Sandbox</legend>\n\n          <div class="form-group">\n            <label class="control-label" for="schema">Form Data</label>\n            <textarea id="schema"\n                      class="form-control"\n                      ng-model="vm.schemaStr"\n                      rows="14">\n            </textarea>\n          </div>\n          <div class="form-group">\n            <button class="btn btn-primary"\n                    ng-click="vm.onSandboxSchema()">Update Form\n            </button>\n          </div>\n        </fieldset>\n        <!-- end sandbox -->\n      </div>\n\n      <div class="cn-form-meta" ng-class="{\'col-sm-4\': vm.config.schema.forms, \'col-sm-6\': !vm.config.schema.forms}">\n        <div class="cn-form-meta-inner"\n             cn-parent-width\n             cn-responsive-height\n             cn-responsive-break="sm"\n             cn-set-max-height="true">\n          <div ng-bind-html="vm.config.schema.meta"/>\n          <div ng-transclude/>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ui-view></ui-view>\n')}]);
//# sourceMappingURL=all.min.js.map
