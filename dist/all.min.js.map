{"version":3,"sources":["all.min.js","_cn-forms.module.js","cn-forms.directive.js","cn-forms.routes.js","cn-forms.service.js","templates.js"],"names":["angular","module","cnForm","restrict","templateUrl","transclude","scope","config","model","controller","Form","controllerAs","bindToController","cnFormsService","$rootScope","$scope","$state","$stateParams","$timeout","$log","$location","$compile","activate","watch","vm","activateOffscreen","cols","formCtrl","buttonContainerClass","isDisabled","schema","compiled","compile","page","pageIndex","getPageIndex","getPage","errors","$broadcast","e","error","message","search","sandbox","schemaStr","toJson","btnConfig","isFormInvalid","saving","$invalid","allowPristine","$pristine","loadOffscreen","console","log","submit","form","handler","$emit","$valid","allowInvalid","_","each","forms","validatePage","then","response","$setPristine","rejection","updatePage","go","current","name","noBadge","curForm","key","$error","chain","reduce","left","right","concat","uniq","reject","$name","value","length","onSandboxSchema","fromJson","this","cleanupEvent","formKey","$watch","$on","directive","$inject","cnFormsRoutesProvider","$stateProvider","cnFlexFormRoutesProvider","$get","addStates","options","pageParam","excludedPage","queryParams","join","state","abstract","url","baseUrl","template","resolve","permissions","params","provider","service","update","i","l","formIndex","factory","run","$templateCache","put"],"mappings":"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","file":"all.min.js","sourcesContent":["\"use strict\";!function(){angular.module(\"cn.forms\",[\"ui.router\",\"cn.ui\",\"cn.flex-form\"])}(),function(){function n(){return{restrict:\"E\",templateUrl:\"cn-forms/templates/cn-forms.html\",transclude:!0,scope:{config:\"=ffConfig\",model:\"=ffModel\"},controller:e,controllerAs:\"vm\",bindToController:!0}}function e(n,e,a,o,r,c,s,i,t){function m(e){if(h.activateOffscreen=!1,h.config.cols=3,h.config.formCtrl=h.cnForm,h.config.buttonContainerClass=\"page-action-btns\",h.config.isDisabled=f,h.config.schema)try{h.compiled=!1,n.compile(h.config.schema,r.page),h.pageIndex=n.getPageIndex(),h.page=n.getPage(),h.compiled=!0,h.page.errors&&(h.page.errors=0,c(function(){a.$broadcast(\"schemaFormValidate\")}))}catch(o){s.error(\"There was an error with your form data:\",o.message)}i.search().sandbox&&(h.schemaStr=angular.toJson(h.config.schema),h.sandbox=!0)}function f(n){return n.isDisabled?n.isDisabled(l):l(n)}function l(n){return h.saving||h.cnForm.$invalid||(!(n&&n.allowPristine)||!h.activateOffscreen)&&h.cnForm.$pristine}function d(){console.log(\"vm.activateOffscreen:\",h.activateOffscreen),h.activateOffscreen=!0}function g(n,e){console.log(\"submit:\"),h.loadOffscreen(),a.$broadcast(\"schemaFormValidate\"),a.$emit(\"schemaFormValidate\"),!n.$valid&&!h.config.allowInvalid||h.saving?_.each(h.config.schema.forms,function(n){h.validatePage(n,n===h.page)}):(h.saving=!0,e(h.model).then(function(n){console.log(\"submit:response:\",n),h.config.formCtrl.$setPristine(),h.saving=!1},function(n){h.saving=!1}))}function v(n){a.$broadcast(\"schemaFormValidate\"),h.validatePage(h.page),r.page=n,o.go(o.current.name,r),a.$emit(\"flexForm.updatePage\",n),a.$broadcast(\"flexForm.updatePage\",n)}function u(n,e){var a=h.config.formCtrl[n.key];if(a){console.log(\"curForm.$error:\",a.$error);var o=_.chain(a.$error).reduce(function(n,e){return n.concat(e)}).uniq(\"$name\").reject({$name:\"\"}).value();o&&o.length?n.errors=!e&&o.length:n.errors=0}}function p(){h.schemaStr&&(h.config.schema=angular.fromJson(h.schemaStr))}var h=this;h.activate=m,h.loadOffscreen=d,h.submit=g,h.updatePage=v,h.validatePage=u,h.cleanupEvent=\"cn.forms.cleanup\",h.formKey=r.page,h.schemaStr=\"\",h.onSandboxSchema=p,a.$watch(function(){return!!h.config.schema},h.activate),a.$on(\"$destroy\",function(){a.$emit(h.cleanupEvent)})}angular.module(\"cn.forms\").directive(\"cnForm\",n),e.$inject=[\"cnFormsService\",\"$rootScope\",\"$scope\",\"$state\",\"$stateParams\",\"$timeout\",\"$log\",\"$location\",\"$compile\"]}(),function(){function n(n,e){function a(){}function o(a){var o=a.excludedPage?\"{page:(?!\"+a.excludedPage+\")[^/]*}\":\":page\",r=[\"debug\",\"sandbox\"].concat(a.queryParams||[]).join(\"&\");n.state(a.name,{\"abstract\":!0,url:a.baseUrl+\"?\"+r,controller:a.controller,controllerAs:\"vm\",template:\"<ui-view></ui-view>\",resolve:a.resolve,permissions:a.permissions,params:a.params}).state(a.name+\".page\",{url:\"/\"+o,templateUrl:a.templateUrl,permissions:a.permissions}),e.addStates(a)}var r={addStates:o,$get:a};return r}angular.module(\"cn.forms\").provider(\"cnFormsRoutes\",n),n.$inject=[\"$stateProvider\",\"cnFlexFormRoutesProvider\"]}(),function(){function n(){function n(n,a){r.schema=n,e(a)}function e(n){if(r.schema.forms)for(var e=0,a=r.schema.forms.length;a>e;e++){var o=r.schema.forms[e];if(n===o.key){r.form=o,r.formIndex=e;break}}else r.form=r.schema.form}function a(){return r.form}function o(){return r.formIndex}var r={compile:n,getPage:a,getPageIndex:o,update:e};return r}angular.module(\"cn.forms\").factory(\"cnFormsService\",n)}(),angular.module(\"cn.forms\").run([\"$templateCache\",function(n){n.put(\"cn-forms/templates/cn-forms.html\",'<form name=\"vm.cnForm\">\\n  <section class=\"cn-form-head cn-heading row vertical-parent\">\\n    <div class=\"container-fluid max-width\">\\n      <cn-flex-form-header ff-header-config=\"vm.config\"\\n                           ff-submit=\"vm.submit(vm.cnForm, handler)\"\\n                           ff-load-offscreen=\"vm.loadOffscreen()\">\\n      </cn-flex-form-header>\\n    </div>\\n  </section>\\n  <div class=\"cn-form cn-form-cols-3\"\\n       cn-responsive-height\\n       cn-responsive-break=\"sm\">\\n    <div class=\"cn-form-inner\">\\n\\n      <div class=\"col-sm-3 cn-form-nav\" ng-if=\"vm.config.schema.forms\">\\n        <div class=\"cn-form-nav-inner\"\\n             cn-parent-width\\n             cn-responsive-height\\n             cn-responsive-break=\"sm\">\\n          <ul class=\"nav nav-pills nav-stacked\">\\n            <li class=\"{{page.key === vm.page.key ? \\'active\\' : \\'\\'}}\"\\n                ng-repeat=\"page in vm.config.schema.forms\">\\n              <a ng-click=\"vm.updatePage(page.key)\">\\n                <i class=\"cni cni-{{page.key}}\"></i>\\n                {{page.title || page.key | titleCase}}\\n                <span class=\"badge has-error\" ng-show=\"page.errors\">{{page.errors}}</span>\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n\\n      <div class=\"cn-form-body col-sm-6\">\\n        <div class=\"{{$index !== vm.pageIndex ? \\'offscreen\\' : \\'\\'}}\"\\n             ng-if=\"vm.config.schema.forms\"\\n             ng-repeat=\"form in vm.config.schema.forms\">\\n          <cn-flex-form\\n            ff-form-index=\"$index\"\\n            ff-form-name=\"form.key\"\\n            ff-config=\"vm.config\"\\n            ff-model=\"vm.model\"\\n            ff-delay-form=\"$index !== vm.pageIndex && !vm.activateOffscreen\"\\n            ff-cleanup-event=\"vm.cleanupEvent\">\\n          </cn-flex-form>\\n        </div>\\n\\n        <cn-flex-form\\n          ng-if=\"!vm.config.schema.forms\"\\n          ff-form-index=\"$index\"\\n          ff-form-name=\"vm.formKey\"\\n          ff-config=\"vm.config\"\\n          ff-model=\"vm.model\"\\n          ff-cleanup-event=\"vm.cleanupEvent\">\\n        </cn-flex-form>\\n\\n        <!-- sandbox for debug mode -->\\n        <fieldset ng-if=\"vm.sandbox\">\\n          <legend>Sandbox</legend>\\n\\n          <div class=\"form-group\">\\n            <label class=\"control-label\" for=\"schema\">Form Data</label>\\n            <textarea id=\"schema\"\\n                      class=\"form-control\"\\n                      ng-model=\"vm.schemaStr\"\\n                      rows=\"14\">\\n            </textarea>\\n          </div>\\n          <div class=\"form-group\">\\n            <button class=\"btn btn-primary\"\\n                    ng-click=\"vm.onSandboxSchema()\">Update Form\\n            </button>\\n          </div>\\n        </fieldset>\\n        <!-- end sandbox -->\\n      </div>\\n\\n      <div class=\"cn-form-meta\" ng-class=\"{\\'col-sm-3\\': vm.config.schema.forms, \\'col-sm-6\\': !vm.config.schema.forms}\">\\n        <div class=\"cn-form-meta-inner\"\\n             cn-parent-width\\n             cn-responsive-height\\n             cn-responsive-break=\"sm\"\\n             cn-set-max-height=\"true\">\\n          <div ng-bind-html=\"vm.config.schema.meta\"/>\\n          <div ng-transclude/>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n<ui-view></ui-view>\\n')}]);\n//# sourceMappingURL=all.min.js.map\n","(function() {\n  'use strict';\n  angular.module('cn.forms', ['ui.router', 'cn.ui', 'cn.flex-form']);\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.forms')\n      .directive('cnForm', cnForm);\n\n  function cnForm() {\n    return {\n      restrict: 'E',\n      templateUrl: 'cn-forms/templates/cn-forms.html',\n      transclude: true,\n      scope: {\n        config: '=ffConfig',\n        model: '=ffModel'\n      },\n      controller: Form,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n  }\n\n  Form.$inject = [\n    'cnFormsService', '$rootScope', '$scope', '$state',\n    '$stateParams', '$timeout', '$log', '$location', '$compile'\n  ];\n  function Form(cnFormsService, $rootScope, $scope, $state,\n                $stateParams, $timeout, $log, $location, $compile) {\n\n    var vm = this;\n\n    vm.activate = activate;\n    vm.loadOffscreen = loadOffscreen;\n    vm.submit = submit;\n    vm.updatePage = updatePage;\n    vm.validatePage = validatePage;\n    vm.cleanupEvent = \"cn.forms.cleanup\";\n    vm.formKey = $stateParams.page;\n\n    // debug\n    vm.schemaStr = '';\n    vm.onSandboxSchema = onSandboxSchema;\n\n    $scope.$watch(function() {\n      return !!vm.config.schema;\n    }, vm.activate);\n\n    $scope.$on('$destroy', function() {\n      $scope.$emit(vm.cleanupEvent);\n    });\n\n    //////////\n\n    function activate(watch) {\n      //console.log('watch:', watch);\n\n      //vm.activateOffscreen = true;\n      vm.activateOffscreen = false;\n      vm.config.cols = 3;\n      vm.config.formCtrl = vm.cnForm;\n      vm.config.buttonContainerClass = \"page-action-btns\";\n      vm.config.isDisabled = isDisabled;\n\n      if(vm.config.schema) {\n        try {\n          //vm.ogSchema = _.clone(vm.config.schema, true);\n          vm.compiled = false;\n          cnFormsService.compile(vm.config.schema, $stateParams.page);\n          vm.pageIndex = cnFormsService.getPageIndex();\n          vm.page = cnFormsService.getPage();\n\n          vm.compiled = true;\n\n          if(vm.page.errors) {\n            vm.page.errors = 0;\n            $timeout(function() {\n              $scope.$broadcast('schemaFormValidate');\n            });\n          }\n\n          //if(vm.offscreenTimeout) $timeout.cancel(vm.offscreenTimeout);\n          //vm.offscreenTimeout = $timeout(loadOffscreen, 2000);\n        }\n        catch(e) {\n          $log.error('There was an error with your form data:', e.message);\n        }\n      }\n\n      // sandbox\n      if($location.search().sandbox) {\n        vm.schemaStr = angular.toJson(vm.config.schema);\n        vm.sandbox = true;\n      }\n    }\n\n     function isDisabled(btnConfig) {\n      return btnConfig.isDisabled ? btnConfig.isDisabled(isFormInvalid) : isFormInvalid(btnConfig);\n    }\n\n    function isFormInvalid(btnConfig) {\n      return vm.saving || vm.cnForm.$invalid || ((!(btnConfig && btnConfig.allowPristine) || !vm.activateOffscreen) && vm.cnForm.$pristine);\n    }\n\n    function loadOffscreen() {\n      //if(vm.offscreenTimeout) {\n      //  $timeout.cancel(vm.offscreenTimeout);\n      //  vm.offscreenTimeout = null;\n      //}\n      console.log('vm.activateOffscreen:', vm.activateOffscreen);\n      vm.activateOffscreen = true;\n    }\n\n    function submit(form, handler) {\n      console.log('submit:');\n      vm.loadOffscreen();\n\n      $scope.$broadcast('schemaFormValidate');\n      $scope.$emit('schemaFormValidate');\n\n      if((form.$valid || vm.config.allowInvalid) && !vm.saving) {\n        vm.saving = true;\n        handler(vm.model)\n            .then(function(response) {\n              console.log('submit:response:', response);\n              vm.config.formCtrl.$setPristine();\n              vm.saving = false;\n            }, function(rejection) {\n              vm.saving = false;\n            });\n      }\n      else {\n        //console.error('form invalid:', form);\n        _.each(vm.config.schema.forms, function(page) {\n          vm.validatePage(page, page === vm.page);\n        });\n      }\n    }\n\n    function updatePage(page) {\n      $scope.$broadcast('schemaFormValidate');\n\n      vm.validatePage(vm.page);\n\n      $stateParams.page = page;\n      $state.go($state.current.name, $stateParams);\n\n      $scope.$emit('flexForm.updatePage', page);\n      $scope.$broadcast('flexForm.updatePage', page);\n    }\n\n    function validatePage(page, noBadge) {\n      var curForm = vm.config.formCtrl[page.key];\n      if(curForm) {\n        console.log('curForm.$error:', curForm.$error);\n        //var errors = _\n        //    .chain(curForm.$error)\n        //    .reduce(function(left, right) {\n        //      return _.merge(left, right);\n        //    })\n        //    .each()\n        //    .value();\n\n        var errors = _.chain(curForm.$error)\n            .reduce(function(left, right) {\n              return left.concat(right);\n            })\n            .uniq('$name')\n            .reject({$name: ''})\n            .value();\n\n        if(errors && errors.length) {\n          //$rootScope.$broadcast('cnForms:errors:' + page.key, errors);\n          page.errors = !noBadge && errors.length;\n        }\n        else {\n          page.errors = 0;\n        }\n      }\n    }\n\n    // debug\n\n    function onSandboxSchema() {\n      if(vm.schemaStr) {\n        vm.config.schema = angular.fromJson(vm.schemaStr);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n      .module('cn.forms')\n      .provider('cnFormsRoutes', cnFormsRoutesProvider);\n\n  cnFormsRoutesProvider.$inject = ['$stateProvider', 'cnFlexFormRoutesProvider'];\n  function cnFormsRoutesProvider($stateProvider, cnFlexFormRoutesProvider) {\n    var provider = {\n      addStates: addStates,\n      $get: $get\n    };\n\n    return provider;\n\n    ////////////\n\n    function $get() {\n      // nothing to do here, but required\n    }\n\n    function addStates(options) {\n      let pageParam = options.excludedPage ? `{page:(?!${options.excludedPage})[^/]*}` : ':page';\n      let queryParams = ['debug', 'sandbox'].concat(options.queryParams || []).join('&');\n      $stateProvider\n          .state(options.name, {\n            abstract: true,\n            url: `${options.baseUrl}?${queryParams}`,\n            controller: options.controller,\n            controllerAs: 'vm',\n            template: '<ui-view></ui-view>',\n            resolve: options.resolve,\n            permissions: options.permissions,\n            params: options.params\n          })\n          .state(options.name + '.page', {\n            url: `/${pageParam}`,\n            templateUrl: options.templateUrl,\n            permissions: options.permissions\n          });\n\n      cnFlexFormRoutesProvider.addStates(options);\n    }\n  }\n\n})();\n","(function() {\n  'use strict';\n  angular\n      .module('cn.forms')\n      .factory('cnFormsService', cnFormsService);\n\n  function cnFormsService() {\n    var service = {\n      compile: compile,\n      getPage: getPage,\n      getPageIndex: getPageIndex,\n      update: update\n    };\n\n    return service;\n\n    //////////////\n\n    function compile(schema, page) {\n      //console.log('schema, page:', schema, page);\n      service.schema = schema;\n      update(page);\n    }\n\n    function update(page) {\n      //console.log('service:', service, page);\n      //service.form = _.find(service.schema.forms, {key: page});\n      //service.schema.form = service.form.form;\n      if (service.schema.forms) {\n        for(var i = 0, l = service.schema.forms.length; i < l; i++) {\n          var form = service.schema.forms[i];\n          if(page === form.key) {\n            service.form = form;\n            service.formIndex = i;\n            break;\n          }\n        }\n      }\n      else {\n        service.form = service.schema.form;\n      }\n    }\n\n    function getPage() {\n      return service.form;\n    }\n\n    function getPageIndex() {\n      return service.formIndex;\n    }\n\n  }\n})();","angular.module(\"cn.forms\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"cn-forms/templates/cn-forms.html\",\"<form name=\\\"vm.cnForm\\\">\\n  <section class=\\\"cn-form-head cn-heading row vertical-parent\\\">\\n    <div class=\\\"container-fluid max-width\\\">\\n      <cn-flex-form-header ff-header-config=\\\"vm.config\\\"\\n                           ff-submit=\\\"vm.submit(vm.cnForm, handler)\\\"\\n                           ff-load-offscreen=\\\"vm.loadOffscreen()\\\">\\n      </cn-flex-form-header>\\n    </div>\\n  </section>\\n  <div class=\\\"cn-form cn-form-cols-3\\\"\\n       cn-responsive-height\\n       cn-responsive-break=\\\"sm\\\">\\n    <div class=\\\"cn-form-inner\\\">\\n\\n      <div class=\\\"col-sm-3 cn-form-nav\\\" ng-if=\\\"vm.config.schema.forms\\\">\\n        <div class=\\\"cn-form-nav-inner\\\"\\n             cn-parent-width\\n             cn-responsive-height\\n             cn-responsive-break=\\\"sm\\\">\\n          <ul class=\\\"nav nav-pills nav-stacked\\\">\\n            <li class=\\\"{{page.key === vm.page.key ? \\'active\\' : \\'\\'}}\\\"\\n                ng-repeat=\\\"page in vm.config.schema.forms\\\">\\n              <a ng-click=\\\"vm.updatePage(page.key)\\\">\\n                <i class=\\\"cni cni-{{page.key}}\\\"></i>\\n                {{page.title || page.key | titleCase}}\\n                <span class=\\\"badge has-error\\\" ng-show=\\\"page.errors\\\">{{page.errors}}</span>\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"cn-form-body col-sm-6\\\">\\n        <div class=\\\"{{$index !== vm.pageIndex ? \\'offscreen\\' : \\'\\'}}\\\"\\n             ng-if=\\\"vm.config.schema.forms\\\"\\n             ng-repeat=\\\"form in vm.config.schema.forms\\\">\\n          <cn-flex-form\\n            ff-form-index=\\\"$index\\\"\\n            ff-form-name=\\\"form.key\\\"\\n            ff-config=\\\"vm.config\\\"\\n            ff-model=\\\"vm.model\\\"\\n            ff-delay-form=\\\"$index !== vm.pageIndex && !vm.activateOffscreen\\\"\\n            ff-cleanup-event=\\\"vm.cleanupEvent\\\">\\n          </cn-flex-form>\\n        </div>\\n\\n        <cn-flex-form\\n          ng-if=\\\"!vm.config.schema.forms\\\"\\n          ff-form-index=\\\"$index\\\"\\n          ff-form-name=\\\"vm.formKey\\\"\\n          ff-config=\\\"vm.config\\\"\\n          ff-model=\\\"vm.model\\\"\\n          ff-cleanup-event=\\\"vm.cleanupEvent\\\">\\n        </cn-flex-form>\\n\\n        <!-- sandbox for debug mode -->\\n        <fieldset ng-if=\\\"vm.sandbox\\\">\\n          <legend>Sandbox</legend>\\n\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"schema\\\">Form Data</label>\\n            <textarea id=\\\"schema\\\"\\n                      class=\\\"form-control\\\"\\n                      ng-model=\\\"vm.schemaStr\\\"\\n                      rows=\\\"14\\\">\\n            </textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-primary\\\"\\n                    ng-click=\\\"vm.onSandboxSchema()\\\">Update Form\\n            </button>\\n          </div>\\n        </fieldset>\\n        <!-- end sandbox -->\\n      </div>\\n\\n      <div class=\\\"cn-form-meta\\\" ng-class=\\\"{\\'col-sm-3\\': vm.config.schema.forms, \\'col-sm-6\\': !vm.config.schema.forms}\\\">\\n        <div class=\\\"cn-form-meta-inner\\\"\\n             cn-parent-width\\n             cn-responsive-height\\n             cn-responsive-break=\\\"sm\\\"\\n             cn-set-max-height=\\\"true\\\">\\n          <div ng-bind-html=\\\"vm.config.schema.meta\\\"/>\\n          <div ng-transclude/>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n<ui-view></ui-view>\\n\");}]);"],"sourceRoot":"/source/"}